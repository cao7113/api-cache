# https://taskfile.dev/usage/
version: '3'
tasks:
  default: bunx vitest run
  dev: bun dev
  # bunx vitest run -t "should fallback to remote when data not found in cache"

  dist: bun build src/index.ts --outdir dist --minify --target bun
  build: bun build src/index.ts --outdir dist --target bun
  run-dist: bun run dist/index.js

  ## DB
  db-push:  bunx drizzle-kit push
  db-gen: bunx drizzle-kit generate
  db-mig: bunx drizzle-kit migrate
  db-setup: |
    rm -fr db/remote-cache.sqlite
    # bunx drizzle-kit push
    # bun run src/db/fake.ts
    bun src/db/migrate-old-data.ts
  # https://orm.drizzle.team/drizzle-studio/overview
  # By default, Drizzle Studio will be launched on the https://local.drizzle.studio host, and studio server will be launched on 127.0.0.1 host but you can specify any host you want yarn drizzle-kit studio --host 0.0.0.0
  db-ui: |
    bunx drizzle-kit studio # --port 3000 --verbose

  hi: |
    curl -H "Authorization: Bearer {{.BEARER_AUTH_TOKEN}}" {{.API_HOST}}/tanshu/hi | jq

  ## Docker
  dk-build: docker build -t api-cache .
  dk-run: |
    task dk-build
    docker rm -f api-cache || true
    docker run --name api-cache --env-file .env.docker -p 3008:8080 -v $(pwd)/db/docker:/opt/data api-cache 
    # https://api-cache.orb.local/
    # http://api-cache.orb.local/
    # docker exec -it api-cache sh

  ## Fly.io
  f-who: fly auth whoami
  f-dep: fly deploy --verbose

  f-mk-vol: fly volumes create appdata --size 1 --region sin
  # 限制单实例，启用自动重启
  # fly scale count 1 --max-per-region 1
  # fly deploy --ha=false --verbose
  f-ftp: fly ssh sftp shell
  # put db/remote-cache.sqlite /opt/data/remote-cache.sqlite
  f-get-cache: fly ssh sftp get /opt/data/remote-cache.sqlite

  setup: |
    # https://orm.drizzle.team/docs/get-started/bun-sqlite-new
    bun add drizzle-orm
    bun add -D drizzle-kit @types/bun
    bun add drizzle-seed

    # Drizzle Kit需要
    bun add better-sqlite3 -d

    bun add @hono/zod-openapi @hono/swagger-ui 
    bun add commander -d